#ifndef _ERRCODES_H_
#define _ERRCODES_H_

typedef struct 
{
    int errorcode;
    const char *description;
} ERRORDESC;

const int ErrorDescCount = 95;

const ERRORDESC ErrorDesc[ErrorDescCount] = {
    // Messages during reading of the input file
    // * in the beginning means that the record number and possibly 001 are written to output too
    {1001, "Unable to reset a writing mode opened file"},
    {1002, "Invalid SCW (Segment Control Word) encountered when attempting to read a MARC record"},
    {1003, "End of MARC file"},
    {1004, "*Invalid length encountered when attempting to read a MARC record"},
    {1005, "Unable to go further in MARC file writing"},
    {1006, "Unable to flush the MARC output file"},
    {1007, "*Invalid MARC data location address"},
    {1009, "*Unable to set the content of the field"},
    {1050, "*Invalid XML data"},
    {1101, "*Invalid MARC tag"},
    {1501, "MARC buffer allocation failure"},
    {1502, "*Error encountered when attempting to read the MARC file"},
    
    // Messages during checking the input record
    {2001, "Invalid input format checking rule (item expected)"},
    {2002, "Invalid or absent tag in input format checking rule"},
    {2003, "Format checking rule redundancy in input format checking file"},
    {2004, "Invalid or absent first indicators list in input format checking rule"},
    {2005, "Invalid or absent second indicators list in input format checking rule"},
    {2006, "Invalid or absent subfield in input format checking rule"},
    {2101, "*Not repeatable but redundant field found in input record"},
    {2102, "*Invalid first indicator found in input record"},
    {2103, "*Invalid second indicator found in input record"},
    {2104, "*Invalid or redundant subfield found in input record"},
    {2105, "*Unexpected field found in input record"},
    {2106, "*Mandatory field expected in input record"},
    {2107, "*Mandatory subfield expected in input record"},
    {2108, "*Field without any subfield found in input record"},
    {2501, "TControlField allocation failure when attempting to load a new input format checking rule"},
    {2502, "TCtrlSubfield allocation failure when attempting to load a new input format checking rule"},
    {2503, "First indicators list allocation failure when attempting to load a new input format checking rule"},
    {2504, "Second indicators list allocation failure when attempting to load a new input format checking rule"},
    {2601, "*Invalid or missing linkage subfield"},
    {2602, "*Linked field not found"},

    // Messages during character transcoding
    {3000, "Memory allocation error"},
    {3001, "*Character not transcoded (unable to find it in transcoding table)"},
    
    // Messages during rule analysis or conversion
    {5000, "Memory allocation error"},
    {5001, "The rule file does not exist"},
    {5002, "*While loop maximum count exceeded - check condition validity"},
    {5004, "*Only one indicator has been found in the output record"},
    {5005, "*Content of indicator is too long (>1)"},
    {5006, "*Found a field with no content (possibly a control field treated as a data field)"},
    {5050, "Unable to parse version number (expected a number)"},
    {5051, "Rule file requires higher version than supported"},
    {5100, "*Rule analysis error"},
    {5101, "*A CDOut like TTT(no)... has an invalid subfield occurrence number (no, nso or nto)"},
    {5102, "*A CDOut like ...SS(no) has an invalid field occurrence number (no, nso or nto)"},
    {5103, "*A CDOut like TTT(nto)... has an invalid subfield occurrence number (no, nso or nto)"},
    {5104, "*A CDOut like ...SS(nso) has an invalid field occurrence number (no, nso or nto)"},
    {5200, "*Expected CD tag"},
    {5212, "Invalid character in CD"},
    {5501, "TRule allocation failure when attempting to analyse the rule"},
    {5502, "Unable to allocate space for setting text of analysed rule"},
    {5503, "Unable to allocate space for setting comment of analysed rule"},
    {5504, "TCD allocation failure when attempting to analyse the rule"},
    {5505, "TCDLib allocation failure when attempting to deal with other input CDs"},
    {5506, "Buffer allocation failure when attempting to split the rule"},
    {5507, "TCD allocation failure when attempting to load CD from MARC record"},
    {5601, "*Failed to add $6 link field"},
    {5602, "*Not applicable when converting in rule order"},
    {5603, "Nested #if's not supported"},
    {5604, "Found #endif without corresponding #if"},
    {5605, "Unbalanced #if - #endif"},
    
    // Messages during checking the output record
    {7001, "Invalid output format checking rule (item expected)"},
    {7002, "Invalid or absent tag in output format checking rule"},
    {7003, "Format checking rule redundancy in output format checking file"},
    {7004, "Invalid or absent first indicators list in output format checking rule"},
    {7005, "Invalid or absent second indicators list in output format checking rule"},
    {7006, "Invalid or absent sub in output format checking rule"},
    {7101, "*Redundant field (not repeatable) found in output record"},
    {7102, "*Invalid first indicator found in output record"},
    {7103, "*Invalid second indicator found in output record"},
    {7104, "*Invalid or redundant subfield found in output record"},
    {7105, "*Unexpected field found in output record"},
    {7106, "*Mandatory field expected in output record"},
    {7107, "*Mandatory subfield expected in output record"},
    {7108, "*Field without any subfield found in output record"},
    {7109, "*Leader is mandatory and has not been converted"},
    {7501, "TControlField allocation failure when attempting to load a new output format checking rule"},
    {7502, "TCtrlSubfield allocation failure when attempting to load a new output format checking rule"},
    {7503, "First indicators list allocation failure when attempting to load a new output format checking rule"},
    {7504, "Second indicators list allocation failure when attempting to load a new output format checking rule"},

    // Other (internal) errors
    {9001, "TRuleFile allocation failure when attempting to load the Rule File"},
    {9011, "TCheckFile allocation failure when attempting to load the Input Check File"},
    {9012, "TCheckFile allocation failure when attempting to load the Output Check File"},
    {9013, "TTransFile allocation failure when attempting to load the Transcoding Character Table"},
    {9021, "TMARCFile allocation failure when attempting to open the Input MARC File"},
    {9022, "TMARCFile allocation failure when attempting to open the Output MARC File"},
    {9031, "TMARCRecord allocation failure when attempting to load the Input MARC File"},
    {9032, "TMARCRecord allocation failure when attempting to load the Output MARC File"},
    {9041, "TMARCField allocation failure when attempting to load the record into memory fields"},
    {9501, "Unable to open the ASCII mode file"},
    {9502, "Unable to open the binary mode file"},
    {9503, "Unable to delete the file"},
    {9504, "Unable to get the next line of a binary file"},
    {9505, "Invalid #include 'file' directive found in file"},
    {9506, "Unable to read two first lines of an ASCII file"}
};

const char * PCRECompileErrorDesc[] = {
    "no error",  
    "\\ at end of pattern",
    "\\c at end of pattern",
    "unrecognized character follows \\",
    "numbers out of order in {} quantifier",
    "number too big in {} quantifier",
    "missing terminating ] for character class",
    "invalid escape sequence in character class",
    "range out of order in character class",
    "nothing to repeat",
    "",
    "internal error: unexpected repeat",
    "unrecognized character after (?",
    "POSIX named classes are supported only within a class",
    "missing )",
    "reference to non-existent subpattern",
    "erroffset passed as NULL",
    "unknown option bit(s) set",
    "missing ) after comment",
    "[this code is not in use]",
    "regular expression too large",
    "failed to get memory",
    "unmatched parentheses",
    "internal error: code overflow",
    "unrecognized character after (?<",
    "lookbehind assertion is not fixed length",
    "malformed number or name after (?(",
    "conditional group contains more than two branches",
    "assertion expected after (?(",
    "(?R or (?[+-]digits must be followed by )",
    "unknown POSIX class name",
    "POSIX collating elements are not supported",
    "this version of PCRE is not compiled with PCRE_UTF8 support",
    "",
    "character value in \\x{...} sequence is too large",
    "invalid condition (?(0)",
    "\\C not allowed in lookbehind assertion",
    "PCRE does not support \\L, \\l, \\N, \\U, or \\u",
    "number after (?C is > 255",
    "closing ) for (?C expected",
    "recursive call could loop indefinitely",
    "unrecognized character after (?P",
    "syntax error in subpattern name (missing terminator)",
    "two named subpatterns have the same name",
    "invalid UTF-8 string",
    "support for \\P, \\p, and \\X has not been compiled",
    "malformed \\P or \\p sequence",
    "unknown property name after \\P or \\p",
    "subpattern name is too long (maximum 32 characters)",
    "too many named subpatterns (maximum 10,000)",
    "",
    "octal value is greater than \\377 (not in UTF-8 mode)",
    "internal error: overran compiling workspace",
    "internal error: previously-checked referenced subpattern not found",
    "DEFINE group contains more than one branch",
    "repeating a DEFINE group is not allowed",
    "inconsistent NEWLINE options",
    "\\g is not followed by a braced name or an optionally braced non-zero number",
    "(?+ or (?- or (?(+ or (?(- must be followed by a non-zero number",
};

const int PCREExecErrorDescCount = 14;

const ERRORDESC PCREExecErrorDesc[PCREExecErrorDescCount] = {
    {-2, "Internal error: Either code or subject was passed as NULL, or ovector was NULL and ovecsize was not zero"},
    {-3, "Internal error: An unrecognized bit was set in the options argument"},
    {-4, "Internal error: Bad magic number, possible memory corruption"},
    {-5, "Internal error: An unknown item was encountered in the compiled pattern"},
    {-6, "Memory allocation failed"},
    {-8, "The backtracking limit was reached"},
    {-10, "Invalid UTF-8 byte sequence was detected"},
    {-11, "The UTF-8 byte sequence was valid, but the value of startoffset did not point to the beginning of a UTF-8 character."},
    {-12, "Internal error: Partial match"},
    {-13, "Internal error: Invalid pattern for partial match"},
    {-14, "An unexpected internal error has occurred. This error could be caused by a bug in PCRE or by overwriting of the compiled pattern."},
    {-15, "Internal error: Value of the ovecsize argument is negative."},
    {-21, "The internal recursion limit was reached"},
    {-23, "Internal error: An invalid combination of PCRE_NEWLINE_xxx options was given"},
};

#endif
